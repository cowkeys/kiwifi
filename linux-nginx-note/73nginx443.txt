s:"{"domainName":"yanshia","logo":"logo1","name":"rick"}"
i:0



Method:"POST"
URL:<*net/url.URL>
Proto:"HTTP/1.1"
ProtoMajor:1
ProtoMinor:1
Header:<net/http.Header>
Body:<io.ReadCloser>
ContentLength:53
TransferEncoding:<[]string> (length: 0, cap: 0)
Close:false
Host:"api.yokena.cn"
Form:<net/url.Values>
PostForm:<net/url.Values>
MultipartForm:nil <*mime/multipart.Form>
Trailer:<net/http.Header>
RemoteAddr:""
RequestURI:""
TLS:nil <*crypto/tls.ConnectionState>





server {
    listen 443 ssl;
    server_name api.yokena.cn;

    root /var/www;
    index index.html index.htm;

    ssl_certificate /etc/letsencrypt/live/api.yokena.cn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.yokena.cn/privkey.pem;

    	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_dhparam /etc/ssl/certs/dhparam.pem;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security max-age=15768000;

     # Pass requests for /parse/ to Parse Server instance at localhost:1337
        location / {
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-NginX-Proxy true;
                proxy_pass http://localhost:1337/;
                proxy_ssl_session_reuse off;
                proxy_set_header Host $http_host;
                proxy_redirect off;
        }
}